{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/diegofreitas/chart_by_genre/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api, { key } from './services/api';\n\nconst ResultList = props => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ResultList;\n\nconst UsernameInput = props => {\n  _s();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"dale\",\n      onChange: e => setValue(e.target.value),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Buscar\",\n      onClick: () => props.getList(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsernameInput, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c2 = UsernameInput;\n\nconst TagInput = props => {\n  _s2();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Filtre por tag...\",\n      onChange: e => setValue(e.target.value),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Filtrar\",\n      onClick: () => props.filter(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}; /////////\n\n\n_s2(TagInput, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c3 = TagInput;\n\nconst Main = () => {\n  _s3();\n\n  const [list, setList] = useState(null);\n  const [filteredList, setFilteredList] = useState([]);\n  const [username, setUsername] = useState(null);\n  const [error, setError] = useState(false);\n\n  const loadData = async username => {\n    try {\n      let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${username}&limit=10&format=json`);\n      let list = result.data.topartists.artist;\n      console.log(result);\n      setList(list);\n      setUsername(username);\n      setError(false);\n    } catch (e) {\n      setList(null);\n      setError(true);\n    }\n  };\n\n  const filter = async tag => {\n    try {\n      let page = 1;\n      let newFilteredList = [];\n\n      while (newFilteredList.length < 10) {\n        let listToFilter;\n\n        if (page > 1) {\n          let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${username}&limit=10&page=${page}&format=json`);\n          listToFilter = result.data.topartists.artist;\n        } else {\n          listToFilter = list;\n        }\n\n        for (let item of listToFilter) {\n          let result = await api.get(`?api_key=${key}&method=artist.gettoptags&artist=${encodeURI(item.name)}&format=json`);\n          let topTags = result.data.toptags.tag;\n          console.log(item.name);\n          console.log(topTags);\n\n          for (var i = 0; i < 5; i++) {\n            if (topTags[i].name === tag) {\n              newFilteredList.push(item);\n            }\n          }\n        }\n\n        console.log(page);\n        page++;\n      }\n\n      setFilteredList(newFilteredList);\n    } catch (e) {\n      console.log(e);\n      setFilteredList([]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UsernameInput, {\n      getList: loadData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Username n\\xE3o encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }, this), list !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TagInput, {\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ResultList, {\n        list: filteredList.length > 0 ? filteredList : list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(Main, \"CpTTFCIQMPO+2tgrrQBhfDgapx4=\");\n\n_c4 = Main;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 151,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ResultList\");\n$RefreshReg$(_c2, \"UsernameInput\");\n$RefreshReg$(_c3, \"TagInput\");\n$RefreshReg$(_c4, \"Main\");","map":{"version":3,"sources":["/home/diegofreitas/chart_by_genre/src/index.js"],"names":["React","useState","ReactDOM","api","key","ResultList","props","list","map","item","index","name","toString","UsernameInput","value","setValue","e","target","getList","TagInput","filter","Main","setList","filteredList","setFilteredList","username","setUsername","error","setError","loadData","result","get","data","topartists","artist","console","log","tag","page","newFilteredList","length","listToFilter","encodeURI","topTags","toptags","i","push","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api, { key } from './services/api';\n\n\nconst ResultList = (props) => {\n    return(\n        <ul>\n            {props.list.map((item, index) => {\n                return (\n                    <li key = {index.toString()}> \n                        {item.name}\n                    </li>\n                )\n            })}\n            \n        </ul>\n    )\n}\n\nconst UsernameInput = (props) => {\n    const [value, setValue] = useState('')\n\n    return(\n        <div>\n            <input \n                placeholder='dale'\n                onChange = {e => setValue(e.target.value)}\n                value = {value}\n            />\n\n            <input\n                type = 'submit'\n                value = 'Buscar'\n                onClick = {() => props.getList(value)}\n            />\n        </div>\n    )\n}\n\nconst TagInput = (props) => {\n    const [value, setValue] = useState('')\n\n    return(\n        <div>\n            <input \n                placeholder='Filtre por tag...'\n                onChange = {e => setValue(e.target.value)}\n                value = {value}\n            />\n\n            <input\n                type = 'submit'\n                value = 'Filtrar'\n                onClick = {() => props.filter(value)}\n            />\n\n        </div>\n    )\n}\n\n/////////\n\nconst Main = () => {\n    const [list, setList] = useState(null);\n    const [filteredList, setFilteredList] = useState([])\n    const [username, setUsername] = useState(null)\n    const [error, setError] = useState(false);\n\n\n    const loadData = async (username) => {\n        try{\n            let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${username}&limit=10&format=json`);\n            \n            let list = result.data.topartists.artist;\n            console.log(result)\n\n            setList(list);\n            setUsername(username)\n            setError(false);\n        }catch(e){\n            setList(null);\n            setError(true);\n        }\n    }\n\n    const filter = async (tag) => {\n        try{\n            let page = 1;\n            let newFilteredList = [];\n\n            while(newFilteredList.length < 10){\n                let listToFilter;\n                if(page > 1){\n                    let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${username}&limit=10&page=${page}&format=json`);\n                    listToFilter = result.data.topartists.artist;\n                }else{\n                    listToFilter = list;\n                }\n\n                \n\n                for(let item of listToFilter){\n                    let result = await api.get(`?api_key=${key}&method=artist.gettoptags&artist=${encodeURI(item.name)}&format=json`)\n    \n                    let topTags = result.data.toptags.tag;\n                    console.log(item.name)\n                    console.log(topTags)\n    \n                    for(var i = 0; i < 5 ; i++){\n                        if(topTags[i].name === tag){\n                            newFilteredList.push(item)\n                        }\n                    }\n                }\n                console.log(page)\n                page++;\n            }\n\n            setFilteredList(newFilteredList);\n        }catch(e){\n            console.log(e)\n            setFilteredList([]);\n        }\n    }\n\n    return(\n        \n        <div>\n            <UsernameInput\n                getList = {loadData}\n            />\n            {error && <p>Username não encontrado</p>}\n\n            {(list !== null &&\n                <div>\n                    <TagInput\n                        filter = {filter} \n                    />\n                    <ResultList\n                        list = {(filteredList.length > 0 ? filteredList : list)}\n                    />\n                </div>\n            )}\n        </div>\n    ) \n    \n}\n\nReactDOM.render(<Main />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}