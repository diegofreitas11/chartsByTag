{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/diegofreitas/chartsByTag/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api, { lastfmKey, source } from './services/api';\nimport ReactLoading from 'react-loading';\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nconst ResultList = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: props.list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: item.visible ? 'card' : 'hiddenCard',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), item.name.length < 20 && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 55\n        }, this) || /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.playcount, \" plays\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, index.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ResultList;\n\nconst UsernameInput = props => {\n  _s();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usernameInputColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"usernameField\",\n      placeholder: \"Insira o nome de usu\\xE1rio\",\n      onChange: e => setValue(e.target.value),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: 'Buscar',\n      onClick: () => props.getList(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsernameInput, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c2 = UsernameInput;\n\nconst UsernameTitle = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usernameRow\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: 'Buscar',\n      onClick: () => props.backToFirstScreen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = UsernameTitle;\n\nconst TagInput = props => {\n  _s2();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usernameInputRow\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"usernameField\",\n      placeholder: \"Filtre por tag...\",\n      onChange: e => setValue(e.target.value),\n      value: value,\n      disabled: props.isLoadingInProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: props.isLoadingInProgress ? 'Cancelar' : 'Filtrar',\n      onClick: props.isLoadingInProgress ? () => props.cancelFetching() : () => props.filter(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}; /////////\n\n\n_s2(TagInput, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c4 = TagInput;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = async username => {\n      this.setState({\n        isMainTopLoading: true\n      });\n\n      try {\n        let result = await api.get(`?api_key=${lastfmKey}&method=user.gettopartists&username=${username}&limit=10&format=json`);\n        let list = result.data.topartists.artist;\n        this.setState({\n          username,\n          error: false,\n          isFirstScreen: false,\n          isMainTopLoading: false,\n          listToRender: list,\n          defaultList: list\n        });\n        this.renderList(list);\n      } catch (e) {\n        this.setState({\n          listToRender: [],\n          error: true\n        });\n      }\n    };\n\n    this.filter = async tag => {\n      this.setState({\n        filteredTopLoadingProgress: 1\n      });\n      var setCancelToken = this.state.isFetchCancelled ? false : true;\n\n      try {\n        let page = 1;\n        let newFilteredList = [];\n\n        while (newFilteredList.length < 10) {\n          let listToFilter;\n\n          if (page > 1) {\n            let result = await api.get(`?api_key=${lastfmKey}&method=user.gettopartists&username=${this.state.username}&limit=10&page=${page}&format=json`);\n            listToFilter = result.data.topartists.artist;\n          } else {\n            listToFilter = this.state.defaultList;\n          }\n\n          for (let item of listToFilter) {\n            if (newFilteredList.length !== 10) {\n              let config = setCancelToken ? {\n                cancelToken: source.token\n              } : {};\n              let result = await api.get(`?api_key=${lastfmKey}&method=artist.gettoptags&artist=${encodeURIComponent(item.name)}&format=json`, config);\n              let topTags = result.data.toptags.tag;\n              console.log(item.name);\n              let limit = topTags.length >= 5 ? 5 : topTags.length;\n\n              for (var i = 0; i < limit; i++) {\n                if (topTags[i].name === tag) {\n                  item.visible = false;\n                  newFilteredList.push(item);\n                }\n              }\n            }\n          }\n\n          page++;\n          this.setState({\n            filteredTopLoadingProgress: newFilteredList.length > 0 ? newFilteredList.length * 10 : 1\n          });\n          console.log(newFilteredList.length);\n        }\n\n        this.setState({\n          listToRender: newFilteredList,\n          filteredTopLoadingProgress: null\n        });\n        this.renderList(newFilteredList);\n      } catch (e) {\n        this.setState({\n          listToRender: []\n        });\n      }\n    };\n\n    this.renderList = async list => {\n      console.log(list);\n\n      for (var item of list) {\n        await new Promise(resolve => setTimeout(resolve, 300));\n        item.visible = true;\n        this.setState({\n          listToRender: list\n        });\n      }\n    };\n\n    this.backToFirstScreen = () => {\n      source.cancel();\n      this.setState({\n        listToRender: [],\n        isFetchCancelled: true,\n        filteredTopLoadingProgress: null,\n        isFirstScreen: true,\n        username: null,\n        error: false\n      });\n    };\n\n    this.cancelFetching = () => {\n      source.cancel();\n      this.setState({\n        filteredTopLoadingProgress: null,\n        listToRender: this.state.defaultList.map(item => {\n          item.visible = false;\n          return item;\n        })\n      });\n      this.renderList(this.state.defaultList);\n    };\n\n    this.state = {\n      isFirstScreen: true,\n      listToRender: [],\n      defaultList: [],\n      username: null,\n      error: false\n    };\n  }\n\n  render() {\n    var {\n      error,\n      listToRender,\n      isFirstScreen,\n      filteredTopLoadingProgress,\n      isMainTopLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isFirstScreen ? 'main' : 'mainWithList',\n      children: [isFirstScreen ? /*#__PURE__*/_jsxDEV(UsernameInput, {\n        getList: this.loadData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(UsernameTitle, {\n        backToFirstScreen: this.backToFirstScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), isMainTopLoading && /*#__PURE__*/_jsxDEV(ReactLoading, {\n        type: \"spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Username n\\xE3o encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 27\n      }, this), !isFirstScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultContent\",\n        children: [/*#__PURE__*/_jsxDEV(TagInput, {\n          filter: this.filter,\n          isLoadingInProgress: !!filteredTopLoadingProgress,\n          cancelFetching: this.cancelFetching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), filteredTopLoadingProgress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          completed: filteredTopLoadingProgress,\n          width: \"200px\",\n          bgcolor: \"#610f0f\",\n          borderRadius: \"0%\",\n          isLabelVisible: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }, this) || /*#__PURE__*/_jsxDEV(ResultList, {\n          list: listToRender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 312,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ResultList\");\n$RefreshReg$(_c2, \"UsernameInput\");\n$RefreshReg$(_c3, \"UsernameTitle\");\n$RefreshReg$(_c4, \"TagInput\");","map":{"version":3,"sources":["/home/diegofreitas/chartsByTag/src/index.js"],"names":["React","useState","ReactDOM","api","lastfmKey","source","ReactLoading","ProgressBar","ResultList","props","list","map","item","index","visible","name","length","playcount","toString","UsernameInput","value","setValue","e","target","getList","UsernameTitle","backToFirstScreen","TagInput","isLoadingInProgress","cancelFetching","filter","Main","Component","constructor","loadData","username","setState","isMainTopLoading","result","get","data","topartists","artist","error","isFirstScreen","listToRender","defaultList","renderList","tag","filteredTopLoadingProgress","setCancelToken","state","isFetchCancelled","page","newFilteredList","listToFilter","config","cancelToken","token","encodeURIComponent","topTags","toptags","console","log","limit","i","push","Promise","resolve","setTimeout","cancel","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api, { lastfmKey, source } from './services/api';\nimport ReactLoading from 'react-loading';\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nconst ResultList = (props) => {\n    return(\n        <div\n            className = 'list'\n        >\n            {props.list.map((item, index) => {\n                return (\n                    <div\n                        className = {item.visible ? 'card' : 'hiddenCard'}\n                        key = {index.toString()}\n                    >\n                        <span>{index + 1}</span>\n                        {\n                            (item.name.length < 20 && <h1>{item.name}</h1>)\n                            || <h2>{item.name}</h2>\n                        }\n                        \n                        <p>{item.playcount} plays</p>\n                    </div>\n                )\n            })}\n        </div>\n            \n    )\n}\n\nconst UsernameInput = (props) => {\n    const [value, setValue] = useState('')\n\n    return(\n        <div className = 'usernameInputColumn'>\n            <input\n                className = 'usernameField' \n                placeholder = 'Insira o nome de usuário'\n                onChange = {e => setValue(e.target.value)}\n                value = {value}\n            /> \n\n            <input\n                className = 'button' \n                type = 'submit'\n                value = {'Buscar'}\n                onClick = {() => props.getList(value)}\n            />\n        </div>\n    )\n}\n\nconst UsernameTitle = (props) => {\n    return(\n        <div className = 'usernameRow'>\n\n            <p></p>\n \n            <input\n                className = 'button' \n                type = 'submit'\n                value = {'Buscar'}\n                onClick = {() => props.backToFirstScreen()}\n            />\n        </div>\n    )\n}\n\nconst TagInput = (props) => {\n    const [value, setValue] = useState('')\n\n    return(\n        <div\n            className = 'usernameInputRow'\n        >\n            <input \n                className = 'usernameField' \n                placeholder = 'Filtre por tag...'\n                onChange = {e => setValue(e.target.value)}\n                value = {value}\n                disabled = {props.isLoadingInProgress}\n            />\n\n            <input\n                className = 'button' \n                type = 'submit'\n                value = {props.isLoadingInProgress ? 'Cancelar' : 'Filtrar'}\n                \n                onClick = {\n                    props.isLoadingInProgress ? \n                    () => props.cancelFetching() : () => props.filter(value)\n                }\n            />\n\n        </div>\n    )\n}\n\n/////////\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            isFirstScreen: true,\n            listToRender: [],\n            defaultList: [],\n            username: null,\n            error: false\n        }\n    }\n\n\n    loadData = async (username) => {\n        this.setState({\n            isMainTopLoading: true\n        })\n\n        try{\n            let result = await api.get(\n                `?api_key=${lastfmKey}&method=user.gettopartists&username=${username}&limit=10&format=json`\n            );\n\n            let list = result.data.topartists.artist;\n\n            this.setState({\n                username,\n                error: false,\n                isFirstScreen: false,\n                isMainTopLoading: false,\n                listToRender: list,\n                defaultList: list\n            });\n\n            this.renderList(list);\n\n        }catch(e){\n            this.setState({\n                listToRender: [],\n                error: true\n            })\n        }\n    }\n\n    filter = async (tag) => {\n\n        this.setState({ \n            filteredTopLoadingProgress: 1\n        })\n\n        var setCancelToken = this.state.isFetchCancelled ? false : true;\n\n        try{\n            let page = 1;\n            let newFilteredList = [];\n\n            while(newFilteredList.length < 10){\n                \n                let listToFilter;\n                if(page > 1){\n                    let result = await api.get(\n                        `?api_key=${lastfmKey}&method=user.gettopartists&username=${this.state.username}&limit=10&page=${page}&format=json`\n                    );\n                    listToFilter = result.data.topartists.artist;\n                }else{\n                    listToFilter = this.state.defaultList;\n                }\n\n                for(let item of listToFilter){\n                    if(newFilteredList.length !== 10){\n                        let config = setCancelToken ?\n                        { cancelToken: source.token } : {}\n\n                        let result = await api.get(\n                            `?api_key=${lastfmKey}&method=artist.gettoptags&artist=${encodeURIComponent(item.name)}&format=json`,\n                            config\n                        );\n        \n                        let topTags = result.data.toptags.tag;\n                        console.log(item.name)\n                        \n                        let limit = topTags.length >= 5 ? 5 : topTags.length;\n\n                        for(var i = 0; i < limit ; i++){\n                            if(topTags[i].name === tag){\n                                item.visible = false;\n                                newFilteredList.push(item)\n                            }\n                        }\n                    }\n                }\n\n                page++;\n                this.setState({\n                    filteredTopLoadingProgress: newFilteredList.length > 0 ? newFilteredList.length * 10 : 1\n                })\n\n                console.log(newFilteredList.length)\n\n            }\n\n            this.setState({\n                listToRender: newFilteredList,\n                filteredTopLoadingProgress: null\n            });\n\n            this.renderList(newFilteredList);\n\n        }catch(e){\n            this.setState({\n                listToRender: []\n            })\n        }\n    }\n\n    renderList = async (list) => {\n        console.log(list)\n        for(var item of list){\n            await new Promise(resolve => setTimeout(resolve, 300))\n            item.visible = true;\n            this.setState({\n                listToRender: list\n            })      \n        }\n    }\n\n    backToFirstScreen = () => {\n        source.cancel();\n    \n        this.setState({\n            listToRender: [],\n            isFetchCancelled: true,\n            filteredTopLoadingProgress: null,\n            isFirstScreen: true,\n            username: null,\n            error: false\n        })\n    }\n\n    cancelFetching = () => {\n        source.cancel();\n        this.setState({\n            filteredTopLoadingProgress: null,\n            listToRender: this.state.defaultList.map(item => {\n                item.visible = false;\n                return item;\n            })\n        })\n        this.renderList(this.state.defaultList)\n    }\n\n    render(){\n        var { \n            error, \n            listToRender, \n            isFirstScreen, \n            filteredTopLoadingProgress,\n            isMainTopLoading \n        } = this.state;\n\n        return(\n            <div className = {isFirstScreen ? 'main' : 'mainWithList'}>\n                {isFirstScreen ? (\n                    <UsernameInput\n                        getList = {this.loadData}\n                    />\n                ):(\n                    <UsernameTitle \n                        backToFirstScreen = {this.backToFirstScreen}\n                    />\n                )}\n                \n\n                {isMainTopLoading &&\n                    <ReactLoading type = 'spin' />       \n                }\n\n                {error && <p>Username não encontrado</p>}\n\n                {(!isFirstScreen &&\n                    <div className=\"resultContent\">\n                        <TagInput\n                            filter = {this.filter}\n                            isLoadingInProgress = {!!filteredTopLoadingProgress}\n                            cancelFetching = {this.cancelFetching}  \n                        />\n                        \n                        {\n                            (filteredTopLoadingProgress &&\n                                <ProgressBar \n                                    completed = {filteredTopLoadingProgress}\n                                    width = '200px'\n                                    bgcolor = '#610f0f'\n                                    borderRadius = '0%'\n                                    isLabelVisible = {false}\n                                />\n                            ) || \n                            <ResultList\n                                list = {listToRender}\n                            />\n                        }\n                    </div>\n                )}\n            </div>\n        ) \n    }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}