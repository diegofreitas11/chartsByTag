{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/diegofreitas/chartsByTag/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.css';\nimport api, { lastfmKey, source } from './services/api';\nimport { UsernameInput } from './components/UsernameInput';\nimport { ResultList } from './components/ResultList';\nimport { TagInput } from './components/TagInput';\nimport { Profile } from './components/Profile';\nimport { LoadingOverlay } from './components/LoadingOverlay';\n\nconst Main = () => {\n  _s();\n\n  const [profile, setProfile] = useState(null);\n  const [chart, setChart] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  const fetchTopArtists = async username => {\n    setLoading(true);\n\n    try {\n      let result = await api.get(`?api_key=${lastfmKey}&method=user.getinfo&username=${username}&format=json`);\n      console.log(result.data.user);\n      setProfile(result.data.user);\n      result = await api.get(`?api_key=${lastfmKey}&method=user.gettopartists&username=${username}&limit=10&format=json`);\n      setChart(result.data.topartists.artist);\n      setLoading(false);\n      console.log(result.data.topartists.artist);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const filterByTag = async tag => {\n    setLoading(true);\n    setChart([]);\n\n    try {\n      //let page = 1;\n      let result = await api.get(`?api_key=${lastfmKey}&method=user.gettopartists&username=${profile.name}&limit=100&format=json`);\n      let listToFilter = result.data.topartists.artist;\n      let counter = 0;\n\n      while (chart.length < 10 && counter !== 100) {\n        let result = await api.get(`?api_key=${lastfmKey}&method=artist.gettoptags&artist=${encodeURIComponent(listToFilter[counter].name)}&format=json`);\n        let topTags = result.data.toptags.tag;\n        let limit = topTags.length >= 5 ? 5 : topTags.length;\n\n        for (var i = 0; i < limit; i++) {\n          if (topTags[i].name === tag) {\n            setChart(chart.concat(listToFilter[counter]));\n          }\n        }\n\n        console.log(chart);\n        counter++; //progresso da barrinha\n      }\n\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const resetPage = () => {\n    setChart(null);\n    setProfile(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [chart ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        profile: profile,\n        resetPage: resetPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TagInput, {\n        filterByTag: tag => filterByTag(tag)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ResultList, {\n        list: chart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(UsernameInput, {\n      fetchTopArtists: username => fetchTopArtists(username)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"kqn16K+T7fTxE6PjIT4xTzvgC4U=\");\n\n_c = Main;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 123,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/diegofreitas/chartsByTag/src/index.js"],"names":["React","useState","ReactDOM","api","lastfmKey","source","UsernameInput","ResultList","TagInput","Profile","LoadingOverlay","Main","profile","setProfile","chart","setChart","loading","setLoading","fetchTopArtists","username","result","get","console","log","data","user","topartists","artist","e","filterByTag","tag","name","listToFilter","counter","length","encodeURIComponent","topTags","toptags","limit","i","concat","resetPage","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.css';\nimport api, { lastfmKey, source } from './services/api';\nimport { UsernameInput } from './components/UsernameInput';\nimport { ResultList } from './components/ResultList';\nimport { TagInput } from './components/TagInput';\nimport { Profile } from './components/Profile';\nimport { LoadingOverlay } from './components/LoadingOverlay';\n\n\n\n\nconst Main = () => {\n\n    const [profile, setProfile] = useState(null);\n    const [chart, setChart] = useState(null);\n    const [loading, setLoading] = useState(null);\n\n    const fetchTopArtists = async (username) => {\n        setLoading(true);\n\n        try{\n            let result = await api.get(\n                `?api_key=${lastfmKey}&method=user.getinfo&username=${username}&format=json`\n            );\n            \n            console.log(result.data.user);\n            setProfile(result.data.user);\n\n            result = await api.get(\n                `?api_key=${lastfmKey}&method=user.gettopartists&username=${username}&limit=10&format=json`\n            );\n            \n            setChart(result.data.topartists.artist);\n            setLoading(false);\n            console.log(result.data.topartists.artist);\n\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const filterByTag = async (tag) => {\n\n        setLoading(true);\n        setChart([]);\n\n        try{\n            //let page = 1;\n\n            let result = await api.get(\n                `?api_key=${lastfmKey}&method=user.gettopartists&username=${profile.name}&limit=100&format=json`\n            );\n\n            let listToFilter = result.data.topartists.artist;\n            \n            let counter = 0;\n            while(chart.length < 10 && counter !== 100){\n\n                let result = await api.get(\n                    `?api_key=${lastfmKey}&method=artist.gettoptags&artist=${encodeURIComponent(listToFilter[counter].name)}&format=json`,\n                );\n\n                let topTags = result.data.toptags.tag;\n                \n                let limit = topTags.length >= 5 ? 5 : topTags.length;\n\n                for(var i = 0; i < limit ; i++){\n                    if(topTags[i].name === tag){\n                        setChart(chart.concat(listToFilter[counter]));\n                    }\n                }    \n\n                console.log(chart);\n\n                counter++;\n                 //progresso da barrinha\n            }\n\n            setLoading(false);\n\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const resetPage = () => {\n        setChart(null);\n        setProfile(null);\n    }\n\n    return(\n        <div className = \"container\">\n            {chart ? \n                (\n                    <>\n                    <Profile \n                        profile = {profile}\n                        resetPage = {resetPage}\n                    />\n\n                    <TagInput \n                        filterByTag = {(tag) => filterByTag(tag)}\n                    />\n\n                    <ResultList\n                        list = {chart} \n                    />\n                    </>\n\n                ) : (\n                    <UsernameInput \n                        fetchTopArtists = {(username) => fetchTopArtists(username)}\n                    />\n                )\n            }\n            {loading && <LoadingOverlay loading={loading}/>}\n        </div>\n    )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}