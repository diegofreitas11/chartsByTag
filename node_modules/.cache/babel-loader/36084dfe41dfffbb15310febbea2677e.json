{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/diegofreitas/chart_by_genre/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api, { key } from './services/api';\n\nconst ResultList = props => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [index + 1, \"\\xBA - \", item.name]\n      }, index.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ResultList;\n\nconst UsernameInput = props => {\n  _s();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.displayOnCenter ? 'usernameInputColumn' : 'usernameInputRow',\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"usernameField\",\n      placeholder: \"dale\",\n      onChange: e => setValue(e.target.value),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Buscar\",\n      onClick: () => props.getList(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsernameInput, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c2 = UsernameInput;\n\nconst TagInput = props => {\n  _s2();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Filtre por tag...\",\n      onChange: e => setValue(e.target.value),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Filtrar\",\n      onClick: () => props.filter(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}; /////////\n\n\n_s2(TagInput, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c3 = TagInput;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = async username => {\n      try {\n        let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${username}&limit=10&format=json`);\n        let list = result.data.topartists.artist;\n        this.setState({\n          list,\n          username,\n          error: false\n        });\n      } catch (e) {\n        this.setState({\n          list: null,\n          error: true\n        });\n      }\n    };\n\n    this.filter = async tag => {\n      try {\n        let page = 1;\n        let newFilteredList = [];\n\n        while (newFilteredList.length < 10) {\n          let listToFilter;\n\n          if (page > 1) {\n            let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${this.state.username}&limit=10&page=${page}&format=json`);\n            listToFilter = result.data.topartists.artist;\n          } else {\n            listToFilter = this.state.list;\n          }\n\n          for (let item of listToFilter) {\n            if (newFilteredList.length !== 10) {\n              let result = await api.get(`?api_key=${key}&method=artist.gettoptags&artist=${encodeURIComponent(item.name)}&format=json`);\n              let topTags = result.data.toptags.tag;\n              console.log(item.name);\n              let limit = topTags.length >= 5 ? 5 : topTags.length;\n\n              for (var i = 0; i < limit; i++) {\n                if (topTags[i].name === tag) {\n                  newFilteredList.push(item);\n                }\n              }\n            }\n          }\n\n          console.log(newFilteredList.length);\n          page++;\n        }\n\n        this.setState({\n          filteredList: newFilteredList\n        });\n      } catch (e) {\n        this.setState({\n          filteredList: []\n        });\n      }\n    };\n\n    this.state = {\n      list: null,\n      filteredList: [],\n      username: null,\n      error: false\n    };\n  }\n\n  render() {\n    var {\n      error,\n      list,\n      filteredList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(UsernameInput, {\n        getList: this.loadData,\n        displayOnCenter: this.state.list === null && this.state.filteredList.length === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Username n\\xE3o encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }, this), list !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TagInput, {\n          filter: this.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ResultList, {\n          list: filteredList.length > 0 ? filteredList : list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 174,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ResultList\");\n$RefreshReg$(_c2, \"UsernameInput\");\n$RefreshReg$(_c3, \"TagInput\");","map":{"version":3,"sources":["/home/diegofreitas/chart_by_genre/src/index.js"],"names":["React","useState","ReactDOM","api","key","ResultList","props","list","map","item","index","name","toString","UsernameInput","value","setValue","displayOnCenter","e","target","getList","TagInput","filter","Main","Component","constructor","loadData","username","result","get","data","topartists","artist","setState","error","tag","page","newFilteredList","length","listToFilter","state","encodeURIComponent","topTags","toptags","console","log","limit","i","push","filteredList","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api, { key } from './services/api';\n\n\nconst ResultList = (props) => {\n    return(\n        <ul>\n            {props.list.map((item, index) => {\n                return (\n                    <li key = {index.toString()}> \n                        {index+1}º - {item.name}\n                    </li>\n                )\n            })}\n            \n        </ul>\n    )\n}\n\nconst UsernameInput = (props) => {\n    const [value, setValue] = useState('')\n\n    return(\n        <div\n            className = {\n                props.displayOnCenter ? \n                'usernameInputColumn' : 'usernameInputRow'\n            }\n        >\n            <input\n                className = 'usernameField' \n                placeholder ='dale'\n                onChange = {e => setValue(e.target.value)}\n                value = {value}\n            /> \n\n            <input\n                className = 'button' \n                type = 'submit'\n                value = 'Buscar'\n                onClick = {() => props.getList(value)}\n            />\n        </div>\n    )\n}\n\nconst TagInput = (props) => {\n    const [value, setValue] = useState('')\n\n    return(\n        <div>\n            <input \n                placeholder='Filtre por tag...'\n                onChange = {e => setValue(e.target.value)}\n                value = {value}\n            />\n\n            <input\n                type = 'submit'\n                value = 'Filtrar'\n                onClick = {() => props.filter(value)}\n            />\n\n        </div>\n    )\n}\n\n/////////\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            list: null,\n            filteredList: [],\n            username: null,\n            error: false\n        }\n    }\n\n\n    loadData = async (username) => {\n        try{\n            let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${username}&limit=10&format=json`);\n            let list = result.data.topartists.artist;\n            this.setState({\n                list,\n                username,\n                error: false\n            })\n        }catch(e){\n            this.setState({\n                list: null,\n                error: true\n            })\n        }\n    }\n\n    filter = async (tag) => {\n        try{\n            let page = 1;\n            let newFilteredList = [];\n\n            while(newFilteredList.length < 10){\n                let listToFilter;\n                if(page > 1){\n                    let result = await api.get(`?api_key=${key}&method=user.gettopartists&username=${this.state.username}&limit=10&page=${page}&format=json`);\n                    listToFilter = result.data.topartists.artist;\n                }else{\n                    listToFilter = this.state.list;\n                }\n\n                \n\n                for(let item of listToFilter){\n                    if(newFilteredList.length !== 10){\n                        let result = await api.get(`?api_key=${key}&method=artist.gettoptags&artist=${encodeURIComponent(item.name)}&format=json`)\n        \n                        let topTags = result.data.toptags.tag;\n                        console.log(item.name)\n                        \n                        let limit = topTags.length >= 5 ? 5 : topTags.length;\n\n                        for(var i = 0; i < limit ; i++){\n                            if(topTags[i].name === tag){\n                                newFilteredList.push(item)\n                            }\n                        }\n                    }\n                }\n                console.log(newFilteredList.length)\n                page++;\n            }\n\n            this.setState({\n                filteredList: newFilteredList\n            })\n        }catch(e){\n            this.setState({\n                filteredList: []\n            })\n        }\n    }\n    render(){\n        var { error, list, filteredList } = this.state;\n        return(\n            <div className = 'main'>\n                <UsernameInput\n                    getList = {this.loadData}\n                    displayOnCenter = {\n                        this.state.list === null \n                        && this.state.filteredList.length === 0\n                    }\n                />\n                {error && <p>Username não encontrado</p>}\n\n                {(list !== null &&\n                    <div>\n                        <TagInput\n                            filter = {this.filter} \n                        />\n                        <ResultList\n                            list = {(filteredList.length > 0 ? filteredList : list)}\n                        />\n                    </div>\n                )}\n            </div>\n        ) \n    }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}